{
    "aries_base_path": "data/aries/",
    "gpt3_cache_db_path": "data/gpt3_cache.sqlite",
    "gpt_model": "gpt-4-0613",
    "gpt_default_max_length": 2048,
    "generated_comments_file": null,
    "output_dir": "data/paper_align_eval/sarg_tp/output/",
    "model_type": "gpt_independent_chunk",
    "paper_chunk_size": 4096,
    "prompts": {
        "system_prompt_v1": "You need to perform tasks that involve a scientific paper.  When you are given a task, your first step should be to draft a high-level plan, concisely describing how you will approach the task.  Then execute that plan.",
        "task_prompt_set1_v1": "A chunk of text from a scientific paper is shown below:\n--- START PAPER CHUNK ---\n{source_paper_chunk}\n--- END PAPER CHUNK ---\n\nWrite \"Ready\" if you have understood the assignment.  You will then be given tasks.",
        "task_prompt_set1_v2": "Task: Write a list of feedback comments, similar to the suggestions a reviewer might make.  Focus on major comments rather than minor comments; major comments are important things that affect the overall impact of the paper, whereas minor comments are small things like style/grammar or small details that don't matter much for whether the paper should be accepted to a venue.\n\nBe specific in your suggestions, including details about method or resource names and any particular steps the authors should follow.  However, don't suggest things that have already been included or addressed in the paper.\n\nYour review comments should have a clear purpose; obviously, it is always possible to simply say the authors should include more details or do more experiments, but in practice the authors have limited space to write and limited time to work, so each comment needs to have a clear purpose.",
        "task_prompt_set1_v3": "Write the final list of review comments.  Do not include any additional commentary.",
        "combiner_system_prompt": "You need to perform tasks that involve a scientific paper.  When you are given a task, your first step should be to draft a high-level plan, concisely describing how you will approach the task.  Then execute that plan.",
        "combiner_task_prompt": "Here are some lists of review comments that were made about different portions of the paper:\n--- BEGIN REVIEWS ---\n{reviewlists}\n--- END REVIEWS ---\n\nMerge these lists into a final list of review comments.  Any comments that are duplicates (saying essentially the same thing as other comments) should be merged or deleted.",
        "system_prompt_v2": "You need to perform tasks that involve a scientific paper.  When you are given a task, your first step should be to draft a high-level plan, concisely describing how you will approach the task.  Then execute that plan.",
        "task_prompt_set2_v1": "A chunk of text from a scientific paper is shown below:\n--- START PAPER CHUNK ---\n{source_paper_chunk}\n--- END PAPER CHUNK ---\n\nWrite \"Ready\" if you have understood the assignment.  You will then be given tasks.",
        "task_prompt_set2_v2": "Refine and improve the following list of review comments that were written about a scientific paper.  The goal is to have comments that are detailed and helpful, similar to those that a scientific paper reviewer might write.  The comments should not ask for things that are already in the paper, they should not be duplicated with other comments, they should include enough detail for an author to know clearly how to improve their paper, the purpose and value of each suggestion should be clearly justified, and so on.  Remove any bad comments.  You may need to incorporate additional information in the paper to refine some of these.\n\nHere is the review:\n{review_comments}",
        "task_prompt_set2_v3": "Write the final list of review comments as a JSON list of strings.  Do not include any additional commentary.",
        "align_comment_lists_system_prompt": "Instructions:\nYou must examine two lists of review comments and identify pairs of comments that have the same meaning.\n\nA user will provide two lists of comments in JSON format; one with \"reference\" comments (from real reviewers) and one with \"predicted\" comments.  Each comment will be associated with an ID number that can be used to identify it.  You must find pairs of comments between the two lists that have the same meaning or make essentially the same request.  For each pair, you must determine whether the predicted comment has \"less\", \"more\", or the \"same\" level of specificity.\n\nYou can think step-by-step and write out your reasoning as needed in order to create a good list.  However, when you are finished thinking, you should write \"Result:\" on a new line, followed by the a JSON list where each object has a \"reference_id\", a \"predicted_id\", and a \"relative_specificity\".\n\nFor example, suppose the reference list is `[{\"comment_id\": 54, \"comment\": \"Compare your method with BERT\"}, {\"comment_id\": 56, \"comment\": \"Report standard deviations in tables\"}]` and the predicted list is `[{\"comment_id\": 25, \"comment\": \"Compare with more baselines\"}, {\"comment_id\": 56, \"comment\": \"Paper lacks novelty\"}]`.  In this case, there is only one matching pair (comparing to baselines/BERT), and asking for more baselines is less specific than asking for BERT, so the final output would be `Result: [{\"reference_id\": 54, \"predicted_id\": 25, \"relative_specificity\": \"less\"}]`.  Notice that there can be reference or predicted comments that do not align to anything.  In some cases there could be no alignments, in which case you should output an empty list.  There may also be cases where two (or more) reference or predicted comments are similar and therefore both align to the same comment in the other list."
    },
    "seed": 1,
    "_generated_comments_file": "data/paper_align_eval/sarg_tp/output/all_results.jsonl"
}